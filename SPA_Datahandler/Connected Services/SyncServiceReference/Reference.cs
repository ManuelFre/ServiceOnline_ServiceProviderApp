//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPA_Datahandler.SyncServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpaUser", Namespace="http://schemas.datacontract.org/2004/07/SharedTypes")]
    [System.SerializableAttribute()]
    public partial class SpaUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisteredatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServiceProviderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Registeredat {
            get {
                return this.RegisteredatField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisteredatField, value) != true)) {
                    this.RegisteredatField = value;
                    this.RaisePropertyChanged("Registeredat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServiceProviderId {
            get {
                return this.ServiceProviderIdField;
            }
            set {
                if ((this.ServiceProviderIdField.Equals(value) != true)) {
                    this.ServiceProviderIdField = value;
                    this.RaisePropertyChanged("ServiceProviderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetail", Namespace="http://schemas.datacontract.org/2004/07/SharedTypes")]
    [System.SerializableAttribute()]
    public partial class OrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZoneIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDat {
            get {
                return this.CreateDatField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDatField, value) != true)) {
                    this.CreateDatField = value;
                    this.RaisePropertyChanged("CreateDat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Taxnumber {
            get {
                return this.TaxnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxnumberField, value) != true)) {
                    this.TaxnumberField = value;
                    this.RaisePropertyChanged("Taxnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZoneId {
            get {
                return this.ZoneIdField;
            }
            set {
                if ((this.ZoneIdField.Equals(value) != true)) {
                    this.ZoneIdField = value;
                    this.RaisePropertyChanged("ZoneId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SyncServiceReference.ISpaServ")]
    public interface ISpaServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/TestString", ReplyAction="http://tempuri.org/ISpaServ/TestStringResponse")]
        string TestString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/TestString", ReplyAction="http://tempuri.org/ISpaServ/TestStringResponse")]
        System.Threading.Tasks.Task<string> TestStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/Logon", ReplyAction="http://tempuri.org/ISpaServ/LogonResponse")]
        SPA_Datahandler.SyncServiceReference.SpaUser Logon(string username, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/Logon", ReplyAction="http://tempuri.org/ISpaServ/LogonResponse")]
        System.Threading.Tasks.Task<SPA_Datahandler.SyncServiceReference.SpaUser> LogonAsync(string username, string pw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/InitSync", ReplyAction="http://tempuri.org/ISpaServ/InitSyncResponse")]
        void InitSync(bool fullsync, string lastsync);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/InitSync", ReplyAction="http://tempuri.org/ISpaServ/InitSyncResponse")]
        System.Threading.Tasks.Task InitSyncAsync(bool fullsync, string lastsync);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/GetOrderDetail", ReplyAction="http://tempuri.org/ISpaServ/GetOrderDetailResponse")]
        SPA_Datahandler.SyncServiceReference.OrderDetail[] GetOrderDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpaServ/GetOrderDetail", ReplyAction="http://tempuri.org/ISpaServ/GetOrderDetailResponse")]
        System.Threading.Tasks.Task<SPA_Datahandler.SyncServiceReference.OrderDetail[]> GetOrderDetailAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpaServChannel : SPA_Datahandler.SyncServiceReference.ISpaServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpaServClient : System.ServiceModel.ClientBase<SPA_Datahandler.SyncServiceReference.ISpaServ>, SPA_Datahandler.SyncServiceReference.ISpaServ {
        
        public SpaServClient() {
        }
        
        public SpaServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpaServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpaServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TestString() {
            return base.Channel.TestString();
        }
        
        public System.Threading.Tasks.Task<string> TestStringAsync() {
            return base.Channel.TestStringAsync();
        }
        
        public SPA_Datahandler.SyncServiceReference.SpaUser Logon(string username, string pw) {
            return base.Channel.Logon(username, pw);
        }
        
        public System.Threading.Tasks.Task<SPA_Datahandler.SyncServiceReference.SpaUser> LogonAsync(string username, string pw) {
            return base.Channel.LogonAsync(username, pw);
        }
        
        public void InitSync(bool fullsync, string lastsync) {
            base.Channel.InitSync(fullsync, lastsync);
        }
        
        public System.Threading.Tasks.Task InitSyncAsync(bool fullsync, string lastsync) {
            return base.Channel.InitSyncAsync(fullsync, lastsync);
        }
        
        public SPA_Datahandler.SyncServiceReference.OrderDetail[] GetOrderDetail() {
            return base.Channel.GetOrderDetail();
        }
        
        public System.Threading.Tasks.Task<SPA_Datahandler.SyncServiceReference.OrderDetail[]> GetOrderDetailAsync() {
            return base.Channel.GetOrderDetailAsync();
        }
    }
}
