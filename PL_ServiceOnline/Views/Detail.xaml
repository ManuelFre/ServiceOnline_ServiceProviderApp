<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PL_ServiceOnline.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
             xmlns:Converter="clr-namespace:PL_ServiceOnline.Converter" x:Class="PL_ServiceOnline.Views.Detail">
    <UserControl.Resources>
        <Converter:TimeConverter x:Key="TimeConverter"/>
        <Converter:DateConverter x:Key="DateConverter"/>
        <Converter:ByteToImage x:Key="ByteToImage"/>
        <Converter:BoolStringToGerman x:Key="BoolStringToGerman"/>
        <Converter:StringToBoolean x:Key="StringToBoolean"/>
        <SolidColorBrush x:Key="BoldTextColor" Color="Black" />
        <SolidColorBrush x:Key="UnevenBackgroundColor" Color="WhiteSmoke" />

        <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <!-- Wrapping in ViewBox will enlarge calendar of that size.-->
                        <Viewbox Height="400"
                         Width="400">
                            <CalendarItem x:Name="PART_CalendarItem"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DateTimePickerStyle" TargetType="{x:Type xctk:DateTimePicker}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlNormalBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
            <Setter Property="BorderThickness" Value="1,1,0,1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="TimeWatermarkTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False" Margin="0,0,3,0"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="WatermarkTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentControl Content="{Binding}" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Focusable="False" Margin="0,0,3,0"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <xctk:ButtonSpinner  x:Name="PART_Spinner" AllowSpin="{TemplateBinding AllowSpin}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}" Background="{TemplateBinding Background}" HorizontalContentAlignment="Stretch" IsTabStop="False" ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}" VerticalContentAlignment="Stretch">
                                        <xctk:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsUndoEnabled="True" MinWidth="20" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="NoWrap" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" WatermarkTemplate="{TemplateBinding WatermarkTemplate}" Watermark="{TemplateBinding Watermark}"/>
                                    </xctk:ButtonSpinner>
                                    <ToggleButton x:Name="_calendarToggleButton" Background="White" Grid.Column="1" Focusable="False" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.IsHitTestVisible>
                                            <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <xctk:InverseBoolConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsHitTestVisible>
                                        <ToggleButton.IsEnabled>
                                            <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <xctk:InverseBoolConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsEnabled>
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <xctk:ButtonChrome x:Name="ToggleButtonChrome" CornerRadius="0" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:DateTimePicker}}}" RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:DateTimePicker}}}">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                                                        <Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
                                                                            <Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Height="4" Width="7"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                </xctk:ButtonChrome>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                        <ToggleButton.Visibility>
                                            <TemplateBinding Property="ShowDropDownButton">
                                                <TemplateBindingExtension.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </TemplateBindingExtension.Converter>
                                            </TemplateBinding>
                                        </ToggleButton.Visibility>
                                    </ToggleButton>
                                </Grid>
                                <Popup x:Name="PART_Popup" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False">
                                    <Border BorderBrush="#FFABADB3" BorderThickness="1" Padding="3">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <StackPanel>
                                            <Calendar x:Name="PART_Calendar" BorderThickness="0" DisplayDate="2016-05-24" Style="{DynamicResource CalendarStyle}"/>
                                            <xctk:TimePicker x:Name="PART_TimeUpDown" AllowSpin="{TemplateBinding TimePickerAllowSpin}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" ClipValueToMinMax="{Binding ClipValueToMinMax, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" FormatString="{TemplateBinding TimeFormatString}" Format="{TemplateBinding TimeFormat}" IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}" Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}" ShowButtonSpinner="{TemplateBinding TimePickerShowButtonSpinner}" Text="" Visibility="{TemplateBinding TimePickerVisibility}" Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" Watermark="{TemplateBinding TimeWatermark}"/>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlMouseOverBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False"/>
                                    <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                            </DataTrigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ControlSelectedBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="FocusManager.FocusedElement" TargetName="PART_TextBox" Value="{Binding ElementName=PART_TextBox}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CalendarStyle" TargetType="{x:Type Calendar}">
            <Setter Property="Foreground" Value="#FF333333"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE4EAF0" Offset="0"/>
                        <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                        <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                    </LinearGradientBrush>

                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <Viewbox Width="300" Height="300">
                            <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}"/>
                            </StackPanel>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        
        
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Source="{StaticResource Locator}" Mode="OneWay" Path="DetailVm"/>
    </UserControl.DataContext>





    <Border BorderBrush="Black" BorderThickness="0.5"  Width="Auto" Margin="10" >
        <Grid Margin="10,0,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <Label Content="Auftrag" FontSize="28" FontWeight="Bold" />
                <Label Content="{Binding OrderId}" FontSize="28" FontWeight="Bold" />
            </StackPanel>

            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="1">
                <Grid Margin="0,0,5,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <GroupBox Header="Kundendaten" Grid.Row="0" Margin="0,15,0,0">

                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>


                            <Label Content="Kundennummer:" Grid.Row="0" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Vorname:"      Grid.Row="1" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="Nachname:"     Grid.Row="2" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Adresse:"      Grid.Row="3" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="PLZ:"          Grid.Row="4" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Stadt:"        Grid.Row="5" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="Telefon:"      Grid.Row="6" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Email:"        Grid.Row="7" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />

                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="0"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="2"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="3"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="4"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="5"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="6"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="7"/>

                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding CustomerId}" Grid.Row="0"    FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Firstname}"  Grid.Row="1"    FontSize="14" VerticalAlignment="Center" Height="30" />
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Lastname}"   Grid.Row="2"    FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Address}"    Grid.Row="3"    FontSize="14" VerticalAlignment="Center" Height="30" />
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Zip}"        Grid.Row="4"    FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding City}"       Grid.Row="5"    FontSize="14" VerticalAlignment="Center" Height="30" />
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Phone}"      Grid.Row="6"    FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"  Grid.Column="1" Text="{Binding Email}"      Grid.Row="7"    FontSize="14" VerticalAlignment="Center" Height="30" />

                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="0" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="1" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="2" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="3" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="4" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="5" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="6" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="7" Grid.Column="1"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Auftragsdaten (vom Kunden festgelegt)" Grid.Row="1" Margin="0,15,0,0">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Bestellnummer:"         Grid.Row="0" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Bestelldatum:"          Grid.Row="1" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="Beschreibung:"          Grid.Row="2" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Einheiten:"             Grid.Row="3" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="Einheitendefinition:"   Grid.Row="4" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Bevorzugter Termin:"    Grid.Row="5" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Height="30" />
                            <Label Content="Kunden Kommentar:"      Grid.Row="6" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Stretch" Background="{StaticResource UnevenBackgroundColor}"/>
                            <Label Content="Alles inclusive:"       Grid.Row="7" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" />
                            <Label Content="Gesamtbetrag:"          Grid.Row="8" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="14" VerticalAlignment="Center" Background="{StaticResource UnevenBackgroundColor}"/>

                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="0"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="2"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="3"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="4"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="5"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="6"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="7"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="8"/>

                            <TextBox   IsReadOnly="True"   Grid.Row="0" Grid.Column="1" Text="{Binding OrderItemId}"                                                   FontSize="14" VerticalAlignment="Center" Height="30"  Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"   Grid.Row="1" Grid.Column="1" Text="{Binding OrderedDateTime, StringFormat=dd.MM.yyyy - HH:mm, ConverterCulture=de-DE}"              FontSize="14" VerticalAlignment="Stretch" Height="30" VerticalContentAlignment="Center"/>
                            <TextBox   IsReadOnly="True"   Grid.Row="2" Grid.Column="1" Text="{Binding Servicedescription}"                                            FontSize="14" VerticalAlignment="Center" Height="30"  Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"   Grid.Row="3" Grid.Column="1" Text="{Binding BookedItems}"                                                   FontSize="14" VerticalAlignment="Center" Height="30"  />
                            <TextBox   IsReadOnly="True"   Grid.Row="4" Grid.Column="1" Text="{Binding ServiceUnit}"                                                   FontSize="14" VerticalAlignment="Center" Height="30"  Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"   Grid.Row="5" Grid.Column="1" Text="{Binding PreferedDate,  StringFormat=dd.MM.yyyy - HH:mm, ConverterCulture=de-DE}"                FontSize="14" VerticalAlignment="Stretch" Height="30" VerticalContentAlignment="Center" />
                            <TextBlock                     Grid.Row="6" Grid.Column="1" Text="{Binding CustomerNotice}"                                                                    FontSize="14" VerticalAlignment="Center" Height="Auto" MinHeight="30" Padding="6" TextWrapping="WrapWithOverflow" Background="{StaticResource UnevenBackgroundColor}"/>
                            <TextBox   IsReadOnly="True"   Grid.Row="7" Grid.Column="1" Text="{Binding IsAllInclusive, Converter={StaticResource BoolStringToGerman}}" FontSize="14" VerticalAlignment="Center" Height="30"  />
                            <TextBox   IsReadOnly="True"   Grid.Row="8" Grid.Column="1" Text="{Binding Finalprice,StringFormat=C, ConverterCulture=de-DE}"             FontSize="14" VerticalAlignment="Stretch" Height="30" Background="{StaticResource UnevenBackgroundColor}" VerticalContentAlignment="Center"/>

                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="0" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="1" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="2" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="3" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="4" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="5" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="6" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="7" Grid.Column="1"/>
                            <Border BorderBrush="Black" BorderThickness="0.5" Grid.Row="8" Grid.Column="1"/>
                        </Grid>
                    </GroupBox>

                    <GroupBox Header="Auftragsdaten ändern" Grid.Row="2" Margin="0,15,0,0">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Zusätzliche Kosten:" Grid.Row="0" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="24" VerticalAlignment="Center" />
                            <Label Content="Termin:"             Grid.Row="1" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="24" VerticalAlignment="Center" />
                            <Label Content="Auftragstatus:"      Grid.Row="3" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" FontSize="24" VerticalAlignment="Center"/>

                            <TextBox Grid.Column="2" Grid.Row="0" Text="{Binding AddittionalCost,StringFormat=C, ConverterCulture=de-DE}" FontSize="24" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="45" Margin="5" VerticalContentAlignment="Center"/>

                            <!--<xctk:DateTimePicker  Value="{Binding PreferedDate}" Format="Custom" FormatString="dddd, dd. MMMM yyyy HH:mm" CultureInfo="de-DE" Style="{DynamicResource DateTimePickerStyle}" Grid.Column="2" Grid.Row="1" FontSize="24" HorizontalAlignment="Stretch" Margin="5" Height="45" VerticalContentAlignment="Center"/>-->


                          
                            <Grid Grid.Column="2" Grid.Row="1" HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <DatePicker FontSize="25" Grid.Column="0" HorizontalAlignment="Stretch" Margin="5" CalendarStyle="{StaticResource CalendarStyle}" SelectedDate="{Binding SelectedDetailed.PreferedDate, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DataContext="{Binding}" DisplayDate="{Binding SelectedDetailed.SelectedDate}"/>


                                <ComboBox Grid.Column="1" FontSize="25" HorizontalAlignment="Stretch" Margin="5" ItemsSource="{Binding DropdownTimes}" SelectedValue="{Binding PreferedDateTime,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding PreferedDateTime}" />
                            </Grid>

                            <ComboBox Grid.Column="2" Grid.Row="3" ItemsSource="{Binding AllStatuses}" SelectedValue="{Binding Status}" FontWeight="Bold" FontSize="24" Height="45" Margin="5" VerticalContentAlignment="Center" SelectedIndex="1"/>

                        </Grid>
                    </GroupBox>

                    

                    <GroupBox Header="Anmerkungen von Dienstleister" Grid.Row="3" Margin="0,15,0,0">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Height="40" Text="{Binding ServiceProviderComment}"  FontSize="14" VerticalAlignment="Top" Margin="5" VerticalContentAlignment="Top"/>
                        </Grid>
                    </GroupBox>

                    <StackPanel Grid.Row="4" HorizontalAlignment="Right" Margin="20"  >
                        <Border Height="50"  MinWidth="250" CornerRadius="6" BorderBrush="#51b9ff" BorderThickness="4" >
                            <Button Content="Auftragsdaten ändern"  BorderThickness="0" Foreground="White" BorderBrush="#51b9ff" Background="#51b9ff" FontSize="15" FontWeight="Bold" Command="{Binding BtnApplyChanges}" />
                        </Border>
                    </StackPanel>


    <GroupBox Grid.Row="5" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Angehängte Dokumente" VerticalAlignment="Center"/>
                                <StackPanel Margin="50,0,0,0">
                                    <Border HorizontalAlignment="Center" VerticalAlignment="Center" Height="30"  Width="30" CornerRadius="6" BorderBrush="#51b9ff" BorderThickness="4" >
                                        <Button HorizontalAlignment="Center" Foreground="White" VerticalAlignment="Center" Content="+"  FontSize="15" FontWeight="Bold" BorderThickness="0" BorderBrush="Transparent" Height="30"  Width="30" Background="#51b9ff" Command="{Binding BtnCreateReport}"/>
                                    </Border>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox.Header>

                        <ListBox ItemsSource="{Binding OrderItemReports}" HorizontalContentAlignment="Stretch" MinHeight="60" Margin="10" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" >
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter></ItemsPresenter><!--Necessary to override default ListBoxTemplate... since ListBox has an inbuilt Scrollviewer... now outter scrollviewer can easily scroll over this listbox!!!-->
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemTemplate>
                                
                                <DataTemplate>
                                    <Border BorderBrush="Black" BorderThickness="3" CornerRadius="0" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                        <StackPanel Orientation="Vertical" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                            <StackPanel Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" MinHeight="50" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                    <Label VerticalAlignment="Top" Content="Kommentar:" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" VerticalContentAlignment="Center"/>
                                                    <TextBlock Margin="2,5,0,0" VerticalAlignment="Top" TextWrapping="Wrap" Width="400" Text="{Binding Comment}"/>
                                                    <Label Margin="100,0,0,0"  HorizontalAlignment="Right" VerticalAlignment="Top" Height="25" Content="Report Datum:" FontWeight="Bold" Foreground="{StaticResource BoldTextColor}" VerticalContentAlignment="Center"/>
                                                    <TextBox HorizontalAlignment="Right" VerticalAlignment="Top" VerticalContentAlignment="Center" Height="25" BorderThickness="0"  IsReadOnly="True" IsHitTestVisible="False" IsReadOnlyCaretVisible="False" Background="Transparent" Text="{Binding ReportDate, StringFormat=dd. MMMM yyyy HH:mm, ConverterCulture=de-DE}" />
                                                </StackPanel>
                                                <Button Visibility="Hidden" Content="Anhang hinzufügen..." HorizontalAlignment="Right"  Width="150" Height="40" Margin="5" Command="{Binding DetailVm.BtnAddPicture, Source={StaticResource Locator}}" CommandParameter="{Binding Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                                            </StackPanel>

                                            <ItemsControl x:Name="SelectedOnlyListBox" ItemsSource="{Binding Appendix}" Margin="2" Visibility="{Binding Visibility}" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>

                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border BorderBrush="Black" BorderThickness="0" CornerRadius="5" Margin="10" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                                            <StackPanel Orientation="Horizontal" ScrollViewer.VerticalScrollBarVisibility="Disabled">

                                                                <Image Source="{Binding Picture}" Height="280" ScrollViewer.VerticalScrollBarVisibility="Disabled" />

                                                            </StackPanel>
                                                        </Border>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </StackPanel>
                                    </Border>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" TargetName="SelectedOnlyListBox" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>

                    <!--<StackPanel Orientation="Horizontal" Grid.Row="5" Margin="0,15,0,0">

                        <Button Visibility="Hidden" Margin="5"  Content="Dokumente anhängen"  Height="40"  Width="290" Command="{Binding BtnAppendDocuments}" HorizontalAlignment="Left"/>
                        
                    </StackPanel>-->

                </Grid>
            </ScrollViewer>
        </Grid>
    </Border>
</UserControl>